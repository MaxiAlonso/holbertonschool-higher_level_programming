===========================
Test for 7-base_geometry.py
---------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> base = BaseGeometry()
>>> base.integer_validator("int number", 12)

>>> base = BaseGeometry()
>>> base.integer_validator("int number", 3333333)
     
>>> base = BaseGeometry()
>>> base.integer_validator("int number", -3)
Traceback (most recent call last):
ValueError: int number must be greater than 0

>>> base = BaseGeometry()
>>> base.integer_validator("int number", 0)
Traceback (most recent call last):
ValueError: int number must be greater than 0

>>> base = BaseGeometry()
>>> base.integer_validator("float number", 3.333)
Traceback (most recent call last):
TypeError: float number must be an integer

>>> base = BaseGeometry()
>>> base.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> base = BaseGeometry()
>>> base.integer_validator(1, 2, 3)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> base = BaseGeometry()
>>> base.integer_validator(33)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> base = BaseGeometry()
>>> base.integer_validator("None", None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> base = BaseGeometry()
>>> base.integer_validator("string", "hello!")
Traceback (most recent call last):
TypeError: string must be an integer
