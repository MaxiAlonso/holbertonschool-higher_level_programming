============================
Test for 2-matrix_divided.py
----------------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[4, 4 , 4], [3, -4 , 10.50000]], 2)
[[2.0, 2.0, 2.0], [1.5, -2.0, 5.25]]

>>> matrix_divided([[4, 4 , 4], [3, -4 , 10.50000]], -2)
[[-2.0, -2.0, -2.0], [-1.5, 2.0, -5.25]]

>>> matrix_divided([[4, "Betty" , 4], [3, -4 , 10.50000]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[4, "Betty" , 4], [3, -4 , 10.50000]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[4, 4], [3, -4 , 10.50000]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[4, "Betty" , 4], [3, -4 , 10.50000]], "C")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[4, "Betty" , 4], [3, -4 , 10.50000]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[], []], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], [3, -4 , 10.50000]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 10], []], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(2, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
